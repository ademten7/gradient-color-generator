{"version":3,"sources":["components/ColorBox.js","components/Header.js","App.js","index.js"],"names":["ColorBox","useState","angle","setAngle","r","g","b","a","percentage","firstColor","setFirstColor","secondColor","setSecondColor","str","keyword","style","background","fontSize","WebkitTextFillColor","WebkitBackgroundClip","textShadow","className","type","min","max","step","onChange","e","target","value","Header","App","reactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61b2b735.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactClipboard from \"react-clipboard-simple\";\n\nimport \"./ColorBox.scss\";\n\nconst ColorBox = () => {\n  const [angle, setAngle] = useState(30);\n  const [firstColor, setFirstColor] = useState({\n    r: 130,\n    g: 21,\n    b: 58,\n    a: 1,\n    percentage: 12,\n  });\n  const [secondColor, setSecondColor] = useState({\n    r: 169,\n    g: 186,\n    b: 24,\n    a: 1,\n    percentage: 35,\n  });\n\n  let str = `background: linear-gradient( ${angle}deg, rgba(${firstColor.r}, ${firstColor.g},${firstColor.b}, ${firstColor.a}) ${firstColor.percentage}%, rgba(${secondColor.r}, ${secondColor.g},${secondColor.b}, ${secondColor.a}) ${secondColor.percentage}%)`;\n\n  return (\n    <div>\n      <ReactClipboard keyword={str}>\n        <h1\n          style={{\n            background: `linear-gradient( ${angle}deg, rgba(${firstColor.r}, ${firstColor.g},${firstColor.b}, ${firstColor.a}) ${firstColor.percentage}%, rgba(${secondColor.r}, ${secondColor.g},${secondColor.b}, ${secondColor.a}) ${secondColor.percentage}%)`,\n            fontSize: \"1.75em\",\n            WebkitTextFillColor: \"transparent\",\n            WebkitBackgroundClip: \"text\",\n            textShadow: \"0 0 0px rgb(0 0 0 / 64%)\",\n          }}\n          className=\"gradient-header\"\n        >\n          {str}\n        </h1>\n      </ReactClipboard>\n      <small>Just click on the gradient to copy</small>\n      <div\n        className=\"color-box\"\n        style={{\n          background: `linear-gradient( ${angle}deg, rgba(${firstColor.r}, ${firstColor.g},${firstColor.b}, ${firstColor.a}) ${firstColor.percentage}%, rgba(${secondColor.r}, ${secondColor.g},${secondColor.b}, ${secondColor.a}) ${secondColor.percentage}%)`,\n        }}\n      ></div>\n      <div className=\"ranges\">\n        {/* Angle */}\n        <div className=\"angle\">\n          <input\n            className=\"angle-range\"\n            type=\"range\"\n            min=\"0\"\n            max=\"360\"\n            step=\"1\"\n            onChange={(e) => setAngle(e.target.value)}\n          />\n        </div>\n        {/* First Color */}\n\n        <div className=\"d-flex range\">\n          <input\n            className=\"input-colors\"\n            type=\"range\"\n            min=\"0\"\n            max=\"255\"\n            step=\"1\"\n            onChange={(e) =>\n              setFirstColor({ ...firstColor, r: e.target.value })\n            }\n          />\n          <input\n            className=\"input-colors\"\n            type=\"range\"\n            min=\"0\"\n            max=\"255\"\n            step=\"1\"\n            onChange={(e) =>\n              setFirstColor({ ...firstColor, g: e.target.value })\n            }\n          />\n          <input\n            className=\"input-colors\"\n            type=\"range\"\n            min=\"0\"\n            max=\"255\"\n            step=\"1\"\n            onChange={(e) =>\n              setFirstColor({ ...firstColor, b: e.target.value })\n            }\n          />\n          <input\n            className=\"input-colors\"\n            type=\"range\"\n            min=\"0\"\n            max=\"1\"\n            step=\"0.1\"\n            onChange={(e) =>\n              setFirstColor({ ...firstColor, a: e.target.value })\n            }\n          />\n          <input\n            className=\"input-colors\"\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            step=\"1\"\n            onChange={(e) =>\n              setFirstColor({ ...firstColor, percentage: e.target.value })\n            }\n          />\n        </div>\n        {/* Second Color */}\n        <div className=\"d-flex range\">\n          <input\n            className=\"input-colors\"\n            type=\"range\"\n            min=\"0\"\n            max=\"255\"\n            step=\"1\"\n            onChange={(e) =>\n              setSecondColor({ ...secondColor, r: e.target.value })\n            }\n          />\n          <input\n            className=\"input-colors\"\n            type=\"range\"\n            min=\"0\"\n            max=\"255\"\n            step=\"1\"\n            onChange={(e) =>\n              setSecondColor({ ...secondColor, g: e.target.value })\n            }\n          />\n          <input\n            className=\"input-colors\"\n            type=\"range\"\n            min=\"0\"\n            max=\"255\"\n            step=\"1\"\n            onChange={(e) =>\n              setSecondColor({ ...secondColor, b: e.target.value })\n            }\n          />\n          <input\n            className=\"input-colors\"\n            type=\"range\"\n            min=\"0\"\n            max=\"1\"\n            step=\"0.1\"\n            onChange={(e) =>\n              setSecondColor({ ...secondColor, a: e.target.value })\n            }\n          />\n          <input\n            className=\"input-colors\"\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            step=\"1\"\n            onChange={(e) =>\n              setSecondColor({ ...secondColor, percentage: e.target.value })\n            }\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColorBox;\n","import React from \"react\";\n\nimport \"./Header.scss\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <h1 className=\"title\">CSS Gradient</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ColorBox from \"./components/ColorBox\";\nimport Header from \"./components/Header\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Header />\n        <ColorBox />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","\nimport React from \"react\"\nimport App from \"./App.js\"\nimport reactDOM from \"react-dom\"\n\nreactDOM.render(<App/>,document.getElementById(\"root\"))"],"sourceRoot":""}